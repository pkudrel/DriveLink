name: Deploy Token Page

on:
  push:
    branches: [production]
    paths:
      - 'token-form/**'
      - '.github/workflows/token-page.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4


      - name: Validate token form files
        run: |
          # Check if required files exist
          if [ ! -f "token-form/index.html" ]; then
            echo "‚ùå token-form/index.html not found"
            exit 1
          fi

          if [ ! -f "token-form/styles.css" ]; then
            echo "‚ùå token-form/styles.css not found"
            exit 1
          fi

          if [ ! -f "token-form/script.js" ]; then
            echo "‚ùå token-form/script.js not found"
            exit 1
          fi

          echo "‚úÖ All token form files found"

      - name: Build token page
        run: |
          # Create build directory
          mkdir -p _site

          # Copy token form files
          cp -r token-form/* _site/

          # Get build info for footer
          COMMIT_SHA=$(git rev-parse --short HEAD)
          BUILD_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          # Update index.html with build info
          sed -i "s/Generated by DriveLink Obsidian Plugin/Generated by DriveLink (${COMMIT_SHA}) on ${BUILD_DATE}/g" _site/index.html

          echo "‚úÖ Token page built successfully"
          echo "üìù Commit: ${COMMIT_SHA}"
          echo "üìÖ Build Date: ${BUILD_DATE}"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    needs: [build, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notification
        run: |
          if [ "${{ needs.build.result }}" = "success" ] && [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "‚úÖ Token page deployed successfully!"
            echo "üîó URL: ${{ needs.deploy.outputs.page_url }}"
          else
            echo "‚ùå Token page deployment failed"
            exit 1
          fi